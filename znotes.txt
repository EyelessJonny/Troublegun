 Resources:
    -Themes: nucleus-dark-ui
             spacegray-atom-dark-syntax

    -Font: Ubuntu Mono
           Fantasque Sans Mono
Misc:
     - No misc notes.

Task 1:
    - Welcome's end user to program.
    - Goes through troubleshooting questions looking for substrings:
        - Software or Hardware/Firmware?
        - Stuck updating?, Malware?, Data loss?
        - Boot-loop? Bricked? Charged?
    - Print solution, if not accepted go to top.

Task 2:
    - Welcome's end user to program.
    - User inputs problem.
    - Check if keywords are in txt file:
        - "Cracked"
        - "Boot-loop"
        - "Display"
    - Print solution, if not accepted go to top.

Task 3:
    - Welcome's end user to program.
    - User inputs device model.
    - System checks device model against txt file.
        - If successful load file of suitable questions and responses for that device.
        - If unsuccessful allow them to retry, if unsuccessful a second time send to tech.




#a = "lib." + userinput
#i = importlib.import_module(a)
#exec("module = i.{}.intro()" .format(userinput, userinput))

#from lib import apple
#module = apple.apple.intro()

#userinput = "apple"
#exec("from lib import {}" .format(userinput))
#exec("module = {}.{}.intro()" .format(userinput, userinput), globals())


if (userinput == "apple"):
        from lib import apple as a
        module = a.apple.intro()
        global module
    elif (userinput == "samsung")
        from lib import samsung as s
        module = s.samsung.intro()
        global module
    else:
        module = userinput
